{% extends 'baseFront.html.twig' %}

{% block pageStyle %}
	<link
	href="{{ asset('/css/about.css') }}" rel="stylesheet">
 <script>
		var BookMarkArray = [];
		var filmArray = [];
		{% for film in films %}
			BookMarkArray.push('{{film.isBookmarked}}' ? true : false);
		{% endfor %}
		window.addEventListener('DOMContentLoaded', () => { 
		filmArray = document.querySelectorAll('.flip-card');
		console.log(filmArray);
		});
	</script>
{% endblock %}

{% block body %}
	<body>

		{{ block("header") }}

		<section id="center" class="center_o pt-2 pb-2">
			<div class="container-xl">
				<div class="row center_o1">
					<div class="col-md-5">
						<div class="center_o1l">
							<h2 class="mb-0">Films</h2>
						</div>
					</div>
					<div class="col-md-7">
						<div class="center_o1r text-end">
							<h6 class="mb-0 col_red">
								<a href="{{path('app_film_index')}}">Home</a>
								<span class="me-2 ms-2 text-light">
									<i class="fa fa-caret-right align-middle"></i>
								</span>
								Films</h6>
						</div>
					</div>
				</div>
			</div>
		</section>
		<style>
			.flip-card {
				background-color: transparent;
				height: 460px;
				perspective: 1000px;
				font-family: sans-serif;
			}

			.title {
				font-size: 1.5em;
				font-weight: 900;
				text-align: center;
				margin: 0;
			}

			.flip-card-inner {
				position: relative;
				width: 100%;
				height: 100%;
				text-align: center;
				transition: transform 0.8s;
				transform-style: preserve-3d;
			}

			.flip-card:hover .flip-card-inner {
				transform: rotateY(180deg);
			}

			.flip-card-front,
			.flip-card-back {
				box-shadow: 0 8px 14px 0 rgba(0, 0, 0, 0.2);
				position: absolute;
				display: flex;
				flex-direction: column;
				justify-content: center;
				width: 100%;
				height: 100%;
				-webkit-backface-visibility: hidden;
				backface-visibility: hidden;
				border: 1px solid #f90532;
				border-radius: 1rem;
			}

			.flip-card-front {
				background: linear-gradient(120deg, bisque 60%, rgb(255, 231, 222) 88%, rgb(255, 211, 195) 40%, rgba(255, 127, 80, 0.603) 48%);
				color: coral;
			}

			.flip-card-back {
				background: linear-gradient(120deg, rgb(255, 174, 145) 30%, coral 88%, bisque 40%, rgb(255, 185, 160) 78%);
				color: white;
				transform: rotateY(180deg);
			}
		</style>
		<section id="team" class="pt-4 pb-4 bg_grey">
			<div class="d-flex justify-content-center mb-3">
				<input type="search" class="form-control bg-black" placeholder="Search Site..." id="filmSearchBar" style="width: 413px;">
			</div>
			<div class="d-flex justify-content-center">
			<div class="d-flex justify-content-center flex-wrap mb-3" style="width: 80vw;">
				{% for category in categorys %}
					<div class="btn  me-2 mb-2" style="background-color: white;">
						<div class="form-check">
							<input class="form-check-input form-check-input-category" type="checkbox" value="{{category.nom}}" id="flexCheckChecked{{category.nom}}">
							<label class="form-check-label" for="flexCheckChecked{{category.nom}}">
								{{category.nom}}
							</label>
						</div>
					</div>
				{% endfor %}
				<script>

// Add event listener to checkboxes
document.querySelectorAll('.form-check-input-category').forEach(function(checkbox) {
    checkbox.addEventListener('change', function() {
        // Get checked checkboxes
        let checkedCheckboxes = document.querySelectorAll('.form-check-input-category:checked');

        // Extract values of checked checkboxes
        let checkedValues = Array.from(checkedCheckboxes).map(function(checkbox) {
            return checkbox.value;
        });

        // Send fetch request with checked checkboxes
        fetch("{{path('app_filter_category_film')}}", {
        method: 'POST', // or 'GET', 'PUT', 'DELETE', etc.
        headers: {
            'Content-Type': 'application/json',
			'X-Requested-With': 'XMLHttpRequest'
        },
        body: JSON.stringify({ checkboxes: checkedValues }),
    })
    .then(response => response.json())
    .then(data => {
        console.log('Fetch response:', data);
		if(data.success) {
			let filmIds = data.filmsCategorized.map(film => `flip-card-${film}`);
			console.log(filmIds);
			let filteredFilms = Array.from(filmArray).filter(film => {
				// Check if the film element has a child element with the specified ID
				return filmIds.some(filmId => film.id === filmId);
			});
			console.log({'filterscategories': filteredFilms});
			// Get the container element where you want to set the filtered elements
			let container = document.getElementById('filmContainer'); // Replace 'your-container-id' with the ID of your container element
			
			// Clear previous content of the container
			container.innerHTML = '';
			
			// Add the filtered elements to the container
			filteredFilms.forEach(film => {
				container.appendChild(film.cloneNode(true));
			});
			
										
		}
		})
    });
});

				</script>

			</div>
			</div>
			 <script>
																document.getElementById("filmSearchBar").addEventListener("input",()=> {
																	fetch("{{path('app_search_film')}}",{
																			method: "POST",
																			headers : {
																				'Content-Type': 'application/json',
																				'X-Requested-With': 'XMLHttpRequest'
																			},
																			body: JSON.stringify({'search' : document.getElementById("filmSearchBar").value})
																		}).then(response => response.json()).then(data => {
																			console.log(data);
																		if(data.success) {
																			let filmIds = data.films.map(film => `flip-card-${film}`);
																			console.log(filmIds);
																			let filteredFilms = Array.from(filmArray).filter(film => {
																				// Check if the film element has a child element with the specified ID
																				return filmIds.some(filmId => film.id === filmId);
																			});
																			console.log({'filters': filteredFilms});
																			// Get the container element where you want to set the filtered elements
																			let container = document.getElementById('filmContainer'); // Replace 'your-container-id' with the ID of your container element
																			
																			// Clear previous content of the container
																			container.innerHTML = '';
																			
																			// Add the filtered elements to the container
																			filteredFilms.forEach(film => {
																				container.appendChild(film.cloneNode(true));
																			});
																			
																										
																		}
																		});
																});
															</script>
			<div class="d-flex justify-content-center container-xl">
				{% set j = 0 %}
				<div id="filmContainer" class="team_1i d-flex flex-wrap justify-content-center" style="width: 90vw;">
					{% for film in films %}
						<div id="flip-card-{{film.id}}" class="flip-card col-md-4 " style="width:330px;margin-bottom: 20px;margin-right: 20px;">
							<div class="flip-card-inner ">
								<div
									class="flip-card-front">

									{# <p class="title">FLIP CARD</p> #}
									<img src="{{ asset(film.image) }}" alt="" style="border-radius: 15px;" class="w-100 h-100">
									<div class="team_1i1i1 clearfix position-absolute w-100 bottom-0" style="border-radius: 0px 0px 15px 15px; height: 30%;">
										<button id="bookmarkFront{{j}}" class="btn position-absolute" style="background-color: transparent;top: -309px;right: 10px;">
											<i id="bookmarkIconFront{{j}}" style="{% if film.isBookmarked %} color: red; {% endif %} font-size: 30px;" class="fa fa-bookmark"></i>
										</button>

										<h4 class="col_red">{{film.nom}}</h4>
										<h6>categorys:
											{% for category in film.categorys %}
												<a href="{{ path('app_category_show', {'id': category.id}) }}">{{ category.nom }}</a>
												{% if not loop.last %},
												{% endif %}

											{% endfor %}
										</h6>
										<h4 style="color: white;">{{ averageRatings[j][0]['rate_avg']|default('0')|number_format(1) }}<i class="fa fa-star" style="color: red;margin-left: 6px;"></i>
										</h4>

									</div>
								</div>
								<div class="flip-card-back">
									<div class="team_1i1i1 clearfix position-absolute w-100 bottom-0" style="height: 100%;border-radius:15px;">
										<button id="bookmark{{j}}" class="btn position-absolute" style="background-color: transparent;top: 10px;right: 10px;">
											<i id="bookmarkIcon{{j}}" style="{% if film.isBookmarked %} color: red; {% endif %} font-size: 30px;" class="fa fa-bookmark"></i>
										</button>
										 <script>
																																																										document.getElementById("bookmark{{j}}").addEventListener("click",() => {
																																																											BookMarkArray[{{j}}] = !BookMarkArray[{{j}}];
																																																											let isBookmarked = BookMarkArray[{{j}}];
																																																											fetch("{{path('app_bookmark_film')}}",{
																																																												method: "POST",
																																																												headers : {
																																																													'Content-Type': 'application/json',
																																																													'X-Requested-With': 'XMLHttpRequest'
																																																												},
																																																												body: JSON.stringify({'id' : {{film.id}},'isBookmarked': isBookmarked})
																																																											}).then(response => response.json()).then(data => {console.log(data);
																																																											if(data.success) {
																																																												document.getElementById('bookmarkIcon{{j}}').style.color = isBookmarked ? "red" : "black";
																																																												document.getElementById('bookmarkIconFront{{j}}').style.color = isBookmarked ? "red" : "black";
																																																											new Noty({
																																																												type: isBookmarked ? 'success' : 'error',
																																																												layout: 'topRight',
																																																												text: `{{film.nom}} is ${isBookmarked ? 'bookmarked' : 'unbookmarked'}`,
																																																												theme: 'sunset',
																																																												timeout: 5000
																																																												}).show();
																																																												}
																																																											});
																																																										});
																																																										</script>
										<h4 class="col_red">{{film.nom}}</h4>
										<h6>categorys:
											{% for category in film.categorys %}
												<a href="{{ path('app_category_show', {'id': category.id}) }}">{{ category.nom }}</a>
												{% if not loop.last %},
												{% endif %}

											{% endfor %}
										</h6>

										<h6>Actors:
											{% for actor in film.actors %}
												<a href="{{ path('app_actor_show', {'id': actor.id}) }}">{{ actor.nom }}</a>
												{% if not loop.last %},
												{% endif %}
											{% endfor %}
										</h6>
										<h6>Description:
											{{film.description}}
										</h6>
										<form id="rateForm{{j}}">
											<input id="input-{{j}}-sm" value="{{ratings[j]|default('0')}}" class="rating rating-loading" name="rate" data-min="0" data-max="5" data-step="0.5" data-size="sm" data-show-clear="false" data-show-caption="false">
										</form>
										 <script>
																																																																																																										
																																																																																																																					</script>
										 <script>
																																																																																																																					$("#input-{{j}}-sm").rating().on("rating:change", function(event, value) {
																																																																																																										console.log("You rated {{film.nom}}: " + value);
																																																																																																										console.log($("#rateForm{{j}}").serialize());
																																																																																																										let xhr = new XMLHttpRequest();
																																																																																																										xhr.open('POST', '{{path("app_rate_film_index")}}', true);
																																																																																																										xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
																																																																																																										xhr.onload = function() {
																																																																																																											console.log(xhr.responseText);
																																																																																																										};
																																																																																																										
																																																																																																										// Encode the data in URL-encoded format
																																																																																																										let data = 'rate=' + encodeURIComponent(value) + '&filmId=' + encodeURIComponent({{film.id}});
																																																																																																										
																																																																																																										xhr.send(data);										
																																																																																																																																																						});
																																																																																																																																																																	</script>

										<button class="button mt-4" data-bs-toggle="modal" data-bs-target="#Youtubewatch{{j}}" data-thevideo="{{videoUrl[j]}}">
											<i class="fa fa-play-circle align-middle me-1"></i>
											Watch Trailer</button>


									</div>
								</div>
							</div>
						</div>
						<div class="modal fade" id="Youtubewatch{{j}}" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden=" true">
							<div class="modal-dialog" style="max-width: 594px;">
								<div class="modal-content">
									<div class="modal-header">
										<h1 class="modal-title fs-5" id="staticBackdropLabel">Modal title</h1>
										<button type="button" class="btn-close close" data-bs-dismiss="modal" aria-label="Close"></button>
									</div>
									<div class="modal-body">
										<iframe width="560" height="315" src="{{videoUrl[j]}}" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>
									</div>
									<div class="modal-footer"></div>
								</div>
							</div>
						</div>
						{% set j = j + 1  %}
					{% endfor %}

				</div>
			</div>
		</section>

		{{ block("footer") }}
	 <script>
																																				function autoPlayYouTubeModal() {
																																								var triggers = document.querySelectorAll('[data-bs-toggle="modal"]');
																																								triggers.forEach(function (trigger) {
																																								trigger.addEventListener('click', function () {
																																								var theModal = this.getAttribute('data-bs-target');
																																								var videoSRC = this.getAttribute('data-theVideo');
																																								var videoSRCauto = videoSRC + "?autoplay=1";
																																								document.querySelector(theModal + ' iframe').setAttribute('src', videoSRCauto);
																																								
																																								var closeButton = document.querySelector(theModal + ' button.close');
																																								closeButton.addEventListener('click', function () {
																																								document.querySelector(theModal + ' iframe').setAttribute('src', videoSRC);
																																								});
																																								});
																																								});
																																								}
																																								document.addEventListener('DOMContentLoaded', function () {
																																								autoPlayYouTubeModal();
																																								});
																																										</script>
		 <script>
																																																																				window.onscroll = function () {
																																																																										myFunction()
																																																																										};
																																																																										
																																																																										var navbar_sticky = document.getElementById("navbar_sticky");
																																																																										var sticky = navbar_sticky.offsetTop;
																																																																										var navbar_height = document.querySelector('.navbar').offsetHeight;
																																																																										
																																																																										function myFunction() {
																																																																										if (window.pageYOffset >= sticky + navbar_height) {
																																																																										navbar_sticky.classList.add("sticky")
																																																																										document.body.style.paddingTop = navbar_height + 'px';
																																																																										} else {
																																																																										navbar_sticky.classList.remove("sticky");
																																																																										document.body.style.paddingTop = '0'
																																																																										}
																																																																										}
																																																																												</script>
	</body>
{% endblock %}
